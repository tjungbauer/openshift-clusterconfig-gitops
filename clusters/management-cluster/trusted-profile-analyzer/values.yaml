---
target_namespace: &namespace trusted-profile-analyzer
s3_hostname: &s3_hostname s3-openshift-storage.apps.ocp.aws.ispworld.at
storageclassname: &storageclassname tpa-bucket-storage-class
bucketname: &bucketname trusted-profile-analyzer

enabled: true

namespace:
  create: true
  name: *namespace

db:
  use_example_db_sts: true
  example_db_user: testuser
  example_db_pass: thisisonly4testingNOT4prod

#######################################################
# If ODF is used, the Chart helper-objectstore
# is able to create the S3 storage for Quay.
#
# It is a helper chart that simply creates another
# backingstore.
# This is a chart in an early state, and not everything
# can be customized for now.
#
# It will create the objects:
#  - BackingStore
#  - BackingClass
#  - StorageClass

# NOTE: Currently only PV type is supported
#######################################################
helper-objectstore:
  enabled: true
  # syncwave: 1

  # Name of the BackingStore
  backingstore_name: tpa-backingstore
  # Size of the BackingStore
  backingstore_size: 700Gi
  # numOfVolumes: 1
  # type: py-pool

  # The StorageClass the BackingStore is based on
  baseStorageClass: gp3-csi

  # Name of the StorageClass that shall be enabled.
  storageclass_name: *storageclassname

  # Bucket that shall be created
  bucket:
    # -- Shall a new bucket be enabled?
    # @default -- false
    enabled: true

    # -- Name of the bucket that shall be created
    name: *bucketname

    # -- Target Namespace for that bucket.
    namespace: *namespace

    # -- Syncwave for bucketclaim creation. This should be done very early, but it depends on ODF.
    # @default -- 2
    syncwave: 2

    # -- Name of the storageclass for our bucket
    # @default -- openshift-storage.noobaa.io
    storageclass: *storageclassname
